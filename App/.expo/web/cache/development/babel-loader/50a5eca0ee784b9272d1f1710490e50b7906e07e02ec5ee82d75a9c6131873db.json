{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Feather } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CheckboxWithText = function CheckboxWithText() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isChecked = _useState2[0],\n    setIsChecked = _useState2[1];\n  var toggleCheckbox = function toggleCheckbox() {\n    setIsChecked(!isChecked);\n  };\n  return _jsxs(TouchableOpacity, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      marginTop: 24\n    },\n    onPress: toggleCheckbox,\n    children: [_jsx(View, {\n      style: {\n        width: 18,\n        height: 18,\n        borderRadius: 4,\n        borderWidth: 1,\n        borderColor: isChecked ? '#000' : '#D5D5D5',\n        marginRight: 8,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: isChecked && _jsx(Feather, {\n        name: \"check\",\n        size: 14,\n        color: \"blue\"\n      })\n    }), _jsx(Text, {\n      style: {\n        fontSize: 14\n      },\n      children: \"Lembre-me\"\n    })]\n  });\n};\nexport default CheckboxWithText;","map":{"version":3,"names":["React","useState","View","TouchableOpacity","Text","Feather","jsx","_jsx","jsxs","_jsxs","CheckboxWithText","_useState","_useState2","_slicedToArray","isChecked","setIsChecked","toggleCheckbox","style","flexDirection","alignItems","marginTop","onPress","children","width","height","borderRadius","borderWidth","borderColor","marginRight","justifyContent","name","size","color","fontSize"],"sources":["C:/Users/valentina_cardoso/Documents/SA/SA_2023_3A_Buon_Appetito/App/src/Components/CheckboxWithText.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TouchableOpacity, Text } from 'react-native';\r\nimport { Feather } from '@expo/vector-icons'; // Importe o ícone da biblioteca Feather Icons\r\n\r\nconst CheckboxWithText = () => {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  const toggleCheckbox = () => {\r\n    setIsChecked(!isChecked);\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={{\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        marginTop: 24\r\n      }}\r\n      onPress={toggleCheckbox}\r\n    >\r\n      <View\r\n        style={{\r\n          width: 18,\r\n          height: 18,\r\n          borderRadius: 4,\r\n          borderWidth: 1,\r\n          borderColor: isChecked ? '#000' : '#D5D5D5',\r\n          marginRight: 8,\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        {isChecked && (\r\n          <Feather name=\"check\" size={14} color=\"blue\" /> // Ícone de check exibido quando isChecked é verdadeiro\r\n        )}\r\n      </View>\r\n      <Text style={{ fontSize: 14}}>Lembre-me</Text>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nexport default CheckboxWithText;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAExC,SAASC,OAAO,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE7C,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;EAC7B,IAAAC,SAAA,GAAkCV,QAAQ,CAAC,KAAK,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAE9B,IAAMI,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3BD,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,OACEL,KAAA,CAACN,gBAAgB;IACfc,KAAK,EAAE;MACLC,aAAa,EAAE,KAAK;MACpBC,UAAU,EAAE,QAAQ;MACpBC,SAAS,EAAE;IACb,CAAE;IACFC,OAAO,EAAEL,cAAe;IAAAM,QAAA,GAExBf,IAAA,CAACL,IAAI;MACHe,KAAK,EAAE;QACLM,KAAK,EAAE,EAAE;QACTC,MAAM,EAAE,EAAE;QACVC,YAAY,EAAE,CAAC;QACfC,WAAW,EAAE,CAAC;QACdC,WAAW,EAAEb,SAAS,GAAG,MAAM,GAAG,SAAS;QAC3Cc,WAAW,EAAE,CAAC;QACdC,cAAc,EAAE,QAAQ;QACxBV,UAAU,EAAE;MACd,CAAE;MAAAG,QAAA,EAEDR,SAAS,IACRP,IAAA,CAACF,OAAO;QAACyB,IAAI,EAAC,OAAO;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAM,CAAE;IAC/C,CACG,CAAC,EACPzB,IAAA,CAACH,IAAI;MAACa,KAAK,EAAE;QAAEgB,QAAQ,EAAE;MAAE,CAAE;MAAAX,QAAA,EAAC;IAAS,CAAM,CAAC;EAAA,CAC9B,CAAC;AAEvB,CAAC;AAED,eAAeZ,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}